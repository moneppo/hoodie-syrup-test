{
  "name": "hoodie-plugin-template",
  "version": "1.0.0",
  "description": "Basic Hoodie plugin layout",
  "main": "worker.js",
  "devDependencies": {
    "mocha": "~1.17.1",
    "chai": "~1.9.0",
    "grunt": "^0.4.3",
    "grunt-shell": "^0.6.4",
    "grunt-mocha-browser": "0.0.4",
    "grunt-hoodie": "0.3.0",
    "grunt-continue": "0.0.1",
    "hoodie-server": "^0.9.19",
    "grunt-simple-mocha": "^0.4.0",
    "grunt-contrib-jshint": "^0.9.2",
    "grunt-env": "^0.4.1",
    "grunt-contrib-watch": "^0.6.0",
    "hoodie-plugin-users": "^0.1.0"
  },
  "hoodie": {
    "plugins": [
      "hoodie-plugin-users"
    ]
  },
  "dependencies": {
    "render-appcache-manifest": "~0.3.0",
    "glob": "~4.0.2",
    "node-watch": "~0.3.4"
  },
  "scripts": {
    "test": "grunt test"
  },
  "readme": "# Hoodie Plugin Template\n\nThis is a template layout for a Hoodie plugin. It contains a Gruntfile with\nappropriate tasks for running jshint, unit tests and browser tests against\na Hoodie server.\n\nYou'll need to have phantomjs and grunt installed:\n\n```\nnpm install -g phantomjs grunt-cli\n```\n\n## To run tests / linting\n\nInstall dev dependencies:\n\n```\nnpm install\n```\n\nThen run the 'test' task\n\n```\ngrunt test\n```\n\nYou can also run `test:unit` or `test:browser` individually.\n\nIf your plugin depends on other plugins being present (usually it will at\nleast depend on the hoodie users plugin), then make sure they're included\nin your devDependencies in package.json and listed in the hoodie.plugins\nproperty. This way, they'll also get started when the browser tests are\nrun.\n\nNOTE: When running the browser tests, the grunt tasks will remove the local\nHoodie 'data' directory completely so you get a clean database to test\nagainst. Be careful you don't use this path for any data you may want to\nkeep!\n",
  "readmeFilename": "README.md",
  "_id": "hoodie-plugin-template@1.0.0",
  "dist": {
    "shasum": "3ed4e58250a3a89df39499e30832002c62cac7ab"
  },
  "_from": "../hoodie-plugin-template/"
}
